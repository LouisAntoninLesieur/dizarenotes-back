BEGIN;

DROP TABLE IF EXISTS "author", "notes", "comments", "tags", "note_tags";

CREATE TABLE "author" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "userName" VARCHAR(255) NOT NULL,
    "email" VARCHAR(255) NOT NULL UNIQUE,
    "password" VARCHAR(255) NOT NULL,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "notes" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "author_id" INT REFERENCES "author"("id") ON DELETE CASCADE,
    "title" VARCHAR(255) NOT NULL,
    "content" TEXT NOT NULL,
    "isOpen" BOOLEAN DEFAULT TRUE,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "comments" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "author_id" INT REFERENCES "author"("id") ON DELETE CASCADE,
    "note_id" INT REFERENCES "notes"("id") ON DELETE CASCADE,
    "content" TEXT NOT NULL,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "tags" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "name" VARCHAR(255) NOT NULL UNIQUE,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE "note_tags" (
    "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    "note_id" INT REFERENCES "notes"("id") ON DELETE CASCADE,
    "tag_id" INT REFERENCES "tags"("id") ON DELETE CASCADE,
    "created_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

COMMIT;